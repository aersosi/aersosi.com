---
// Fundations
import Button from "./Button.astro";
// Icons
import Contrast from "../icons/Contrast.astro";
// Logo Component This component renders an SVG logo and accepts props for customization.
// Props: - class: A string of additional classes to style the SVG.
// - ...rest: Any other valid attributes for an <svg> element (e.g., id, style, role, aria-label, etc.).
// Example Usage: <Logo class="my-custom-class" /> or <Logo id="logo-id" style="width: 50px; height: 50px;" />
const {class: className = "", ...rest} = Astro.props;
---

<Button id="theme-toggle"
        iconOnly
        size="sm"
        variant="muted"
        role="switch"
        aria-checked="false"
        aria-label="Toggle dark mode"
        data-theme-toggle
        class={className}
        {...rest}
>
    <span class="sr-only">Toggle dark mode</span>
    <Contrast slot="icon" size="base"/>
</Button>

<script>
    function updateTheme(isDark) {
        document.documentElement.classList.toggle("dark", isDark);
        localStorage.setItem("theme", isDark ? "dark" : "light");

        // Update all theme toggles
        document.querySelectorAll("[data-theme-toggle]").forEach((button) => {
            button.setAttribute("aria-checked", isDark ? "true" : "false");
        });
    }

    function initializeTheme() {
        const savedTheme = localStorage.getItem("theme");
        const systemPrefersDark = window.matchMedia(
            "(prefers-color-scheme: dark)"
        ).matches;
        const isDark = savedTheme ? savedTheme === "dark" : systemPrefersDark;
        updateTheme(isDark);
    }

    initializeTheme();

    // Attach event listener to all theme toggles
    document.querySelectorAll("[data-theme-toggle]").forEach((button) => {
        button.addEventListener("click", () => {
            const isDark = document.documentElement.classList.contains("dark");
            updateTheme(!isDark);
        });
    });
</script>
