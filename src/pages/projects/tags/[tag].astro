---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "../../../components/lib/elements/Text.astro";
import Wrapper from "../../../components/lib/containers/Wrapper.astro";
// Components
import ProjectEntry from "@/components/blog/ProjectEntry.astro";
// Content
import { getCollection } from "astro:content";
import GoBack from "../../../components/lib/elements/GoBack.astro";
import Link from "../../../components/lib/elements/Link.astro";
export async function getStaticPaths() {
    const allProjects = await getCollection("projects")
    const uniqueTags = [
        ...new Set(allProjects.map((post) => post.data.tags).flat()),
    ];
    return uniqueTags.map((tag) => {
        const filteredProjects = allProjects.filter((post) =>
            post.data.tags.includes(tag)
        );
        return {
            params: {tag},
            props: {projects: filteredProjects},
        };
    });
}
const {tag} = Astro.params;
const {projects} = Astro.props;

const allProjectsUnsorted = await getCollection("projects")
const allProjects = allProjectsUnsorted.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
)
// Tags
const tags = [...new Set(allProjects.map((post) => post.data.tags).flat())];
---

<BaseLayout pageTitle={tag}>
    <section>
        <Wrapper variant="standard">
            <div
                    class="grid grid-cols-1 gap-x-12 gap-y-8 lg:grid-cols-3  pb-16 pt-24 lg:pt-40"
            >
                <div class="lg:sticky lg:top-16 lg:z-40 self-start">
                    <div class="flex gap-8 flex-col">
                        <GoBack/>

                        <Text tag="h1" variant="textLG" class="capitalize font-medium text-base-900 dark:text-white">
                            {tag}
                        </Text>
                    </div>

                    <div class="relative flex h-full mt-1 overflow-x-scroll gap-2 scrollable-content snap-x snap-proximity scrollbar-hide lg:flex-col lg:gap-1 lg:mt-8">
                        <Text tag="p" variant="textSM" class="font-medium text-base-900 dark:text-white">
                            <div class="flex">
                                Alle Kategorien
                                (
                                <Link href="/projects/tags" size="sm" variant="accent"> Index</Link>
                                )
                            </div>
                        </Text>
                        {tags.map((tag) => (
                                <Link title={tag} aria-label={tag} href={`/projects/tags/${tag}`} size="sm"
                                      variant="accent">
                                    {tag}
                                </Link>
                        ))}
                    </div>
                </div>
                <div class="flex flex-col gap-12 lg:col-span-2">
                    {projects.map((post) =>
                            <ProjectEntry post={post}/>)}
                </div>
            </div>
        </Wrapper>
    </section>
</BaseLayout>
