---
// Fundations
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/lib/elements/Text.astro";
import Wrapper from "@/components/lib/containers/Wrapper.astro";
// Components
import ProjectEntry from "@/components/lib/entries/ProjectEntry.astro";
// Content
import { getCollection } from "astro:content";
import Link from "@/components/lib/elements/Link.astro";
import { stickyElement } from "@/shared/classes.js";

export async function getStaticPaths() {
    const allProjects = await getCollection("projects")
    const uniqueTags = [
        ...new Set(allProjects.map((project) => project.data.tags).flat()),
    ];
    return uniqueTags.map((tag) => {
        const filteredProjects = allProjects.filter((project) =>
            project.data.tags.includes(tag)
        );
        return {
            params: {tag},
            props: {projects: filteredProjects},
        };
    });
}
const {tag} = Astro.params;
const {projects} = Astro.props;

const allProjectsUnsorted = await getCollection("projects")
const allProjects = allProjectsUnsorted.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
)

const allTags = [...new Set(allProjects.map((post) => post.data.tags).flat())];
const priorityTags = ["Professionelles Projekt", "Privates Projekt"];
const projectTypes = allTags.filter((tag) => priorityTags.includes(tag));
const otherTags = allTags
    .filter((tag) => !priorityTags.includes(tag))
    .sort((a, b) => a.localeCompare(b, "de"));
---

<BaseLayout pageTitle={tag}>
    <section>
        <Wrapper variant="standard">
            <div class="grid grid-cols-1 gap-x-12 gap-y-8 lg:grid-cols-3  py-16 lg:py-24 lg:pt-40">
                <div class={`${stickyElement}`}>
                    <div class="grid gap-8">
                        <Text tag="h1" variant="text2XL" class="capitalize font-medium text-base-900 dark:text-white">
                            {tag}
                        </Text>

                        <div class="grid gap-2">
                            <Text tag="p" variant="textBase"
                                  class="flex gap-1 justify-baseline font-medium text-base-900 dark:text-white">
                                Alle Kategorien
                                <span class="flex gap-0.5"> (<Link href="/articles/tags" size="base"
                                                                   variant="accent">Index</Link>)</span>
                            </Text>

                            <div class="grid gap-2">
                                <div class="overflow-x-scroll scrollable-content snap-x snap-proximity scrollbar-hide">
                                    <div class="flex gap-x-4 gap-y-1 lg:flex-col">
                                        {projectTypes.map((tag) => (
                                                <Link title={tag} aria-label={tag} href={`/projects/tags/${tag}`}
                                                      size="sm"
                                                      variant="accent" class="whitespace-nowrap">
                                                    {tag}
                                                </Link>
                                        ))}
                                    </div>
                                </div>

                                <span class="hidden lg:block"></span>


                                <div class="overflow-x-scroll scrollable-content snap-x snap-proximity scrollbar-hide">
                                    <div class="flex gap-x-4 gap-y-1 lg:flex-col">
                                        {otherTags.map((tag) => (
                                                <Link title={tag} aria-label={tag} href={`/projects/tags/${tag}`}
                                                      size="sm"
                                                      variant="accent" class="whitespace-nowrap">
                                                    {tag}
                                                </Link>
                                        ))}
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
                <div class="flex flex-col gap-12 lg:col-span-2">
                    {projects.map((project) =>
                            <ProjectEntry project={project}/>)}
                </div>
            </div>
        </Wrapper>
    </section>
</BaseLayout>
