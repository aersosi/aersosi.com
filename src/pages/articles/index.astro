---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/lib/elements/Text.astro";
import Wrapper from "@/components/lib/containers/Wrapper.astro";
import ArticlesEntry from "@/components/lib/entries/ArticlesEntry.astro";
import { getCollection } from "astro:content";
import Link from "@/components/lib/elements/Link.astro";
import { stackGrid, stackGridPadding, stickyElement } from "@/shared/classes.ts";

const allPostsUnsorted = await getCollection("articles");
const allPosts = allPostsUnsorted.sort(
	(a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];
---

<BaseLayout>
	<section>
		<Wrapper variant="standard">
			<div class:list={[...stackGrid, ...stackGridPadding]}>
				<div class:list={[...stickyElement]}>
					<div class="grid gap-4">
						<Text tag="h1" variant="text2XL" class="text-base-900 font-medium dark:text-white">
							Artikel
						</Text>

						<div class="grid gap-2">
							<Text
								tag="p"
								variant="textBase"
								class="text-base-900 flex justify-baseline gap-1 font-medium dark:text-white"
							>
								Alle Kategorien
								<span class="flex gap-0.5">
									(<Link href="/articles/tags" size="base" variant="accent">Index</Link>)</span
								>
							</Text>

							<div
								class="scrollable-content scrollbar-hide snap-x snap-proximity overflow-x-scroll"
							>
								<div class="flex gap-x-4 gap-y-1 lg:flex-col">
									{
										tags.map((tag) => (
											<Link
												title={tag}
												aria-label={tag}
												href={`/articles/tags/${tag}`}
												size="sm"
												variant="accent"
											>
												{tag}
											</Link>
										))
									}
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="flex flex-col gap-12 lg:col-span-2">
					{allPosts.map((post) => <ArticlesEntry post={post} />)}
				</div>
			</div>
		</Wrapper>
	</section>
</BaseLayout>
