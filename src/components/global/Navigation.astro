---
// Fundations
import Button from "@/components/lib/elements/Button.astro";
// Icons
import Eye from "@/components/lib/icons/Eye.astro";
import Book from "@/components/lib/icons/Book.astro";
import AtSign from "@/components/lib/icons/AtSign.astro";
import Tool from "@/components/lib/icons/Tool.astro";
import User from "@/components/lib/icons/User.astro";
import Zap from "@/components/lib/icons/Zap.astro";
// Scripts
import ThemeToggle from "@/components/lib/elements/ThemeToggle.astro";

const baseClass = [
    "fixed",
    "w-fit",
    "z-50",

    // mobile center
    "transition-[top]",
    "duration-500",
    "top-2",
    "left-1/2",
    "-translate-x-1/2",

    // lg right fixed
    "lg:top-14",
    "lg:right-14",
    "lg:left-auto",
    "lg:translate-x-0",

    // xl right aligned
    "xl:left-1/2",
    "xl:translate-x-60",
];

const navItems = [
    {href: "/#home", ariaLabel: "Startseite", Icon: Zap},
    {href: "/projects", ariaLabel: "Projekte", Icon: Tool},
    {href: "/articles/", ariaLabel: "Artikel", Icon: Book},
    {href: "/about", ariaLabel: "Über mich", Icon: User},
    {href: "/#socials", ariaLabel: "Kontakt", Icon: AtSign},
    {href: "/system/overview", ariaLabel: "System Overview", Icon: Eye},
];
---

<div id="mainNavWrapper" class:list={[
    ...baseClass,
]}>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const navWrapper = document.getElementById("mainNavWrapper");

        // Überprüfen, ob das Element existiert
        if (navWrapper) {
            window.addEventListener("scroll", () => {
                if (window.scrollY > 100) {
                    navWrapper.classList.remove("lg:top-14");
                    navWrapper.classList.add("lg:top-2");
                } else {
                    navWrapper.classList.remove("lg:top-2");
                    navWrapper.classList.add("lg:top-14");
                }
            });
        }
    });
</script>

    <nav id="mainNav" class="bg-base-200/50 dark:bg-base-800/50 backdrop-blur-xs rounded-xl w-auto">
        <div class="flex items-center p-2 gap-2">
            {navItems.map(({href, ariaLabel, Icon}) => (
                    <Button isLink={true}
                            iconOnly
                            size="sm"
                            variant="accent"
                            href={href}
                            aria-label={ariaLabel}
                            a11ytip-bottom
                            key={href}
                    >
                        <Icon slot="icon" size="sm"/>
                    </Button>
            ))}

            <ThemeToggle aria-label="Hell/Dunkel Modus" a11ytip-bottom/>
        </div>
    </nav>
</div>
