---
import BaseLayout from "@/layouts/BaseLayout.astro";
import Text from "@/components/lib/elements/Text.astro";
import Wrapper from "@/components/lib/containers/Wrapper.astro";
import ArticlesEntry from "@/components/lib/entries/ArticlesEntry.astro";
import { getCollection } from "astro:content";
import Link from "@/components/lib/elements/Link.astro";
import { stackGrid, stackGridPadding, stickyElement } from "@/shared/classes.js";

export async function getStaticPaths() {
    const allPosts = await getCollection("articles")
    const uniqueTags = [
        ...new Set(allPosts.map((post) => post.data.tags).flat()),
    ];
    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) =>
            post.data.tags.includes(tag)
        );
        return {
            params: {tag},
            props: {articles: filteredPosts},
        };
    });
}
const {tag} = Astro.params;
const {articles} = Astro.props;

const allPostsUnsorted = await getCollection("articles")
const allPosts = allPostsUnsorted.sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
)
const tags = [...new Set(allPosts.map((post) => post.data.tags).flat())];
---

<BaseLayout pageTitle={tag}>
    <section>
        <Wrapper variant="standard">
            <div class:list={[...stackGrid, ...stackGridPadding]}>
                <div class:list={[...stickyElement]}>
                    <div class="grid gap-4">
                        <Text tag="h1" variant="text2XL" class="capitalize font-medium text-base-900 dark:text-white">
                            {tag}
                        </Text>

                        <div class="grid gap-2">
                            <Text tag="p" variant="textBase"
                                  class="flex gap-1 justify-baseline font-medium text-base-900 dark:text-white">
                                Alle Kategorien
                                <span class="flex gap-0.5"> (<Link href="/articles/tags" size="base" variant="accent">Index</Link>)</span>
                            </Text>

                            <div class="overflow-x-scroll scrollable-content snap-x snap-proximity scrollbar-hide">
                                <div class="flex gap-x-4 gap-y-1 lg:flex-col">
                                    {tags.map((tag) => (
                                            <Link title={tag} aria-label={tag} href={`/articles/tags/${tag}`} size="sm"
                                                  variant="accent">
                                                {tag}
                                            </Link>
                                    ))}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="flex flex-col gap-12 lg:col-span-2">
                    {articles.map((post) =>
                            <ArticlesEntry post={post}/>)}
                </div>
            </div>
        </Wrapper>
    </section>
</BaseLayout>
