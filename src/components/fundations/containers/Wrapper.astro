---
interface Props {
  variant?: "standard" | "prose"; // Define any variants you need
  class?: string; // Optional prop for additional classes
}
const { variant = "standard", class: extraClass = "" } = Astro.props;
// Map each variant to its specific classes
const variantClasses = {
  standard: "max-w-7xl mx-auto px-4  sm:px-12 lg:px-16",
  prose:
    "prose prose-sm prose-headings:font-medium  text-base-600 dark:text-base-300 prose-headings:text-base-900 dark:prose-headings:text-white prose-blockquote:text-base-500 dark:prose-blockquote:text-base-600 dark:text-base-300 dark:prose-blockquote:border-base-500 prose-blockquote:font-normal prose-blockquote:tracking-normal prose-img:border prose-img:border-base-300 dark:prose-img:border-base-700 dark:prose-code:text-white prose-a:text-accent-400 hover:prose-a:text-accent-500 dark:prose-hr:border-base-800 prose-hr:border-base-300 prose-pre:border-none prose-pre:rounded-xl prose-strong:font-medium prose-a:duration-200 dark:prose-strong:text-white max-w-none prose-pre:scrollbar-hide",
};
// Combine the classes for the specified variant with any extra classes
const classes = `${variantClasses[variant]} ${extraClass}`.trim();
---

<div class={classes}>
  <!-- Render the default slot content -->
  <slot />
</div>
