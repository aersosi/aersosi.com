---
import "./CodeBlock.scss";
import "./CodeBlockTilt.scss";

interface Props {
  title: string;
  body: string;
}

const { title, body } = Astro.props;
---

<div class="cli-card-wrapper">
  <div class="cli-card">
    <div class="head">
      <div class="navigation">
        <div class="circle red"></div>
        <div class="circle yellow"></div>
        <div class="circle green"></div>
      </div>
      <h2 class="title">
        {title}
      </h2>
    </div>
    <div class="body">
      <pre
        class="comment pb-4"><code class="font-mono-300">My CV in your CLI</code></pre>
      <pre class="npx"><code class="font-mono-400">{body}</code></pre>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const card = document.querySelector(".cli-card") as HTMLElement;
    const ROTATION_RANGE = 4;
    let currentRotation = { x: 0, y: 0 };
    let isEnabled = false;
    const mediaQuery = window.matchMedia("(min-width: 768px)");

    function handleMouseMove(event: MouseEvent) {
      if (!isEnabled) return;

      const rect = card.getBoundingClientRect();
      const centerX = rect.left + rect.width / 2;
      const centerY = rect.top + rect.height / 2;
      const tiltY =
        ((event.clientX - centerX) / (rect.width / 2)) * ROTATION_RANGE;
      const tiltX =
        ((event.clientY - centerY) / (rect.height / 2)) * ROTATION_RANGE;

      currentRotation = { x: -tiltX, y: tiltY };
      updateCardRotation();
    }

    function updateCardRotation() {
      card.style.transform = `rotateX(${currentRotation.x}deg) rotateY(${currentRotation.y}deg)`;
    }

    function resetCardPosition() {
      currentRotation = { x: 0, y: 0 };
      updateCardRotation();
    }

    function handleMediaQueryChange(e: MediaQueryListEvent) {
      isEnabled = e.matches;
      if (!isEnabled) {
        resetCardPosition();
      }
    }

    isEnabled = mediaQuery.matches;

    mediaQuery.addEventListener("change", handleMediaQueryChange);
    document.addEventListener("mousemove", handleMouseMove);
    card.addEventListener("mouseleave", () => {
      if (isEnabled) {
        resetCardPosition();
      }
    });

    // Clean up
    return () => {
      mediaQuery.removeEventListener("change", handleMediaQueryChange);
      document.removeEventListener("mousemove", handleMouseMove);
    };
  });
</script>
