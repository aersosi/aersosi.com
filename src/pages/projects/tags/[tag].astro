---
import BaseLayout from "@/components/layouts/BaseLayout.astro";
import Text from "@/components/elements/Text.astro";
import Wrapper from "@/components/containers/Wrapper.astro";
import ProjectEntry from "@/components/entries/ProjectEntry.astro";
import { getCollection } from "astro:content";
import Link from "@/components/elements/Link.astro";
import { stackGrid, stackGridPadding } from "@/lib/shared/classes";

export async function getStaticPaths() {
  const allProjects = await getCollection("projects");
  const uniqueTags = [...new Set(allProjects.map((project) => project.data.tags).flat())];
  return uniqueTags.map((tag) => {
    const filteredProjects = allProjects.filter((project) => project.data.tags.includes(tag));
    return {
      params: { tag },
      props: { projects: filteredProjects },
    };
  });
}
const { tag } = Astro.params;
const { projects } = Astro.props;

const allProjectsUnsorted = await getCollection("projects");
const allProjects = allProjectsUnsorted.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const allTags = [...new Set(allProjects.map((post) => post.data.tags).flat())];
const priorityTags = ["Professionelles Projekt", "Privates Projekt"];
const projectTypes = allTags.filter((tag) => priorityTags.includes(tag));
const otherTags = allTags
  .filter((tag) => !priorityTags.includes(tag))
  .sort((a, b) => a.localeCompare(b, "de"));
---

<BaseLayout
  pageTitle={`Projekt Kategorie | ${tag} | Arthur Ersosi`}
  pageDescription={`Projekte zum Thema ${tag} von Arthur Ersosi. Entdecken Sie meine Projekte im Bereich Frontend-Entwicklung, UI/UX-Design und Web-Anwendungen.`}
>
  <section>
    <Wrapper variant="standard">
      <div class:list={[...stackGrid, ...stackGridPadding]}>
        <div class="grid gap-4">
          <Text tag="h1" variant="text2XL" isPrimary>
            {tag}
          </Text>

          <div class="grid gap-2">
            <Text tag="h2" variant="textBase" class="flex justify-baseline gap-1">
              Alle Kategorien
              <span class="flex gap-0.5">
                (<Link
                  href="/articles/tags"
                  size="base"
                  variant="primary"
                  aria-label="Index aller Kategorien"
                  data-a11ytip-bottom>Index</Link
                >)
              </span>
            </Text>

            <div class="grid gap-2">
              <div
                class="scrollable-content scrollbar-hide snap-x snap-proximity overflow-x-scroll"
              >
                <div class="flex gap-x-4 gap-y-1 lg:flex-col">
                  {
                    projectTypes.map((tag) => (
                      <Link
                        href={`/projects/tags/${tag}`}
                        size="sm"
                        variant="default"
                        class="whitespace-nowrap"
                      >
                        {tag}
                      </Link>
                    ))
                  }
                </div>
              </div>

              <span class="hidden lg:block"></span>

              <div
                class="scrollable-content scrollbar-hide snap-x snap-proximity overflow-x-scroll"
              >
                <div class="flex gap-x-4 gap-y-1 lg:flex-col">
                  {
                    otherTags.map((tag) => (
                      <Link
                        href={`/projects/tags/${tag}`}
                        size="sm"
                        variant="default"
                        class="whitespace-nowrap"
                      >
                        {tag}
                      </Link>
                    ))
                  }
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="flex flex-col gap-12 lg:col-span-2">
          {projects.map((project) => <ProjectEntry project={project} />)}
        </div>
      </div>
    </Wrapper>
  </section>
</BaseLayout>
